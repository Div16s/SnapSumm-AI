import SUMMARY_SYSTEM_PROMPT from "@/utils/summarySystemPrompt";
import { GoogleGenAI } from "@google/genai"
import getENV from "@/lib/env"

const API_KEY = getENV('GEMINI_API_KEY');
const ai = new GoogleGenAI({apiKey: API_KEY});

const generatePDFSummaryWithGemini = async (pdfText: string) => {
    try {
        const prompt = `Transform this document into an engaging, easy-to-read summary with
        contextually relevant emojis and proper markdown formatting.
        \n\nDocument:\n\n${pdfText}`;

        const response = await ai.models.generateContent({
            model: "gemini-2.0-flash",
            contents: [
                {
                    role: "user",
                    parts: [{text: SUMMARY_SYSTEM_PROMPT}, {text: prompt}], 
                }
            ],
        });

        const result = response.text;
        if (!result) {
            throw new Error("No summary generated by Gemini.");
        }
        //console.log("Gemini Summary Result:", result);
        return result;

    } catch (error: any) {
        if(error?.status === 429){
            throw new Error("Rate limit exceeded. Please try again later.");
        }
        console.error("Error generating summary with Gemini:", error);
        throw new Error("Failed to generate summary with Gemini. Please try again later.");
    }
}

export default generatePDFSummaryWithGemini;